## Conhecendo A Linguagem ##
   
   _Tipos de Dados_
   	.Texto 
   	  str(cadeia de caracteres, exemplos: "Phython", """Phyton""", 'Pyhon'. { chamamos de tipo string}
   	.Númerico
   	  int(-10,1,2,99999), float(1.5,-10.222999, 2.44), complex {armazena numero}
   	.sequencia
   	  list, tuple, range 
   	.mapa
   	  dict {CHAVE VALOR, exemplo chave=Nome, valor= Guilherme}
   	.coleção
   	  set, frozenset
   	.booleano
        bool (verdadeiro ou falso)
      .Binário
        bytes ,bytearray, memoryview
   
   _Modo Interativo_
   	para entrar coloque no terminal da ide: python
   	para sair coloque no terminal exit()
   	para escolher um arquivo , escreva python -i (NOME DO ARQUIVO)
   	.Função Dir()
   		Retorna a lista de nomes/metodos no escopo local/que podemos executar atual
   	.função help()
   		invoca o sistema de ajuda integrado. É possível fazer buscas em modo interativo ou informar por parâmetro.
   		para sair do help é só dar enter 2 vezes. e para sair da documentação aperta q
   
   _Variáveis e constantes_
   	.Variáveis
   		são valores/objetos que podem sofrer alterações no decorrer da execução do programa.
   		.. então como faço para alterar valores?
   			basta fazer uma atribuição de um novo valor.
	.Constantes
		são valores que não podem sofrer mutações ao longo do programa.
		Lembrando que em pyhon não tem CONSTANTES!
		A forma que usamos para falar que valores não devem ser alterados, é usando uma convenção
		
	Boas Práticas : O padrão de nomes deve ser em snake case (example meu_nome_alan)
				escolher nomes sujestivos
				NOMES DE CONSTANTES DEVEM SER EM MAIÚSCULO
				e em snake case, lembra de snake case
	
   _Conversão de tipos_
   	.Numérico para string
   		ex: preco = 10.5
   		    idade = 28
   		    print(str(preço))
   		    >>>10.5
   		    ptint(str(idade))
   		    >>>28
   		    
   		    texto = f(#olha cara, esse f é importante , ele serve para mostrar que dentro dessas strings tem variáveis, se ele não existir tu pode ter problema)"idade{idade} preco{preco]"
   		    print(texto)
  	.string_para_numero
  		ex: preco = "10.5"
  		    idade = "28"
  		    print(float(preco))
  		    >>>10.50
  		 outro ex: print(int(1.9))
  		 		>>>2
  		para se revelar o tipo, podemos printar assim:
  				print(type(int(1.9)))
  				>>><class 'str'>
  				
  _Funções de entrada e saida/input e output_
  	.input 
  		é utilizada quando queremos ler dados da entrada padrão(teclado). Ela recebe um argumento do tipo string, que é exibido para o usuário na tela. A função lê a entrada, converte para string e retorna o valor.
  		ex: nome = input ("Informe o seu nome:")
  			>>> Informe o seu nome:
  	.print
  		nome = "guilherme"
  		sobrenome ="Carvalho"
  		print (nome, sobrenomes)
  		print (nome, sobrenome, end="...\n") #esse \n é uma quebra de linha 
  		>>> guilherme Carvalho
  		>>> guilherme Carvalho...
  
  	